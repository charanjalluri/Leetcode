# 📌 Longest Common Subsequence (Leetcode #1143)

## 📝 Problem Statement  
Given two strings `text1` and `text2`, return the **length of their longest common subsequence**.  
A **subsequence** is a sequence derived from another string by deleting some characters without changing the order.  

### 🔹 Example 1:  
```python
Input: text1 = "abcde", text2 = "ace"
Output: 3  
Explanation: The longest common subsequence is "ace".
```

### 🔹 Example 2:  
```python
Input: text1 = "abc", text2 = "abc"
Output: 3  
Explanation: The longest common subsequence is "abc".
```

### 🔹 Example 3:  
```python
Input: text1 = "abc", text2 = "def"
Output: 0  
Explanation: No common subsequence exists.
```

---

## 🚀 Solution Approach  
This problem is solved using **Dynamic Programming (DP)** with a **bottom-up approach**:
- Create a **2D DP table** `dp[m+1][n+1]`, where `dp[i][j]` stores the LCS length of `text1[0:i]` and `text2[0:j]`.
- If characters match (`text1[i-1] == text2[j-1]`), increment LCS value:  
  \[
  dp[i][j] = dp[i-1][j-1] + 1
  \]
- If characters don’t match, take the maximum LCS from the previous subproblems:  
  \[
  dp[i][j] = \max(dp[i-1][j], dp[i][j-1])
  \]

---

## 📝 Optimized Python Solution  
```python
class Solution:
    def longestCommonSubsequence(self, text1, text2):
        m, n = len(text1), len(text2)
        dp = [[0] * (n + 1) for _ in range(m + 1)]

        for i in range(1, m + 1):
            for j in range(1, n + 1):
                if text1[i - 1] == text2[j - 1]:
                    dp[i][j] = dp[i - 1][j - 1] + 1
                else:
                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])

        return dp[m][n]

# Example usage
sol = Solution()
print(sol.longestCommonSubsequence("abcde", "ace"))  # Output: 3
```

---

## ⏳ Time & Space Complexity  
✅ **Time Complexity:** `O(m * n)` (where `m = len(text1)`, `n = len(text2)`)  
✅ **Space Complexity:** `O(m * n)` (for the `dp` table)  

---

---

## ⭐ Follow for More  
If you found this helpful, don't forget to **⭐ star** the repo and follow me on GitHub! 🚀😊  

---
